const notesKey = 'notes';
const input = document.getElementById('note-input');
const addBtn = document.getElementById('add-note');
const list = document.getElementById('notes-list');
const status = document.getElementById('status');
const offlineMessage = document.getElementById('offlineMessage');
const installBtn = document.getElementById('installBtn'); // –ö–Ω–æ–ø–∫–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏

let deferredPrompt;

function loadNotes() {
    const notes = JSON.parse(localStorage.getItem(notesKey)) || [];
    list.innerHTML = '';
    notes.forEach((note, index) => {
        const li = document.createElement('li');
        li.textContent = note;
        const del = document.createElement('button');
        del.textContent = '–£–¥–∞–ª–∏—Ç—å';
        del.onclick = () => {
            notes.splice(index, 1);
            localStorage.setItem(notesKey, JSON.stringify(notes));
            loadNotes();
        };
        li.appendChild(del);
        list.appendChild(li);
    });
}

function updateStatus() {
    const isOnline = navigator.onLine;
    status.textContent = isOnline ? 'üü¢ –û–Ω–ª–∞–π–Ω' : 'üî¥ –û—Ñ–ª–∞–π–Ω';
    offlineMessage.style.display = isOnline ? 'none' : 'block';
}

addBtn.onclick = () => {
    const note = input.value.trim();
    if (note) {
        const notes = JSON.parse(localStorage.getItem(notesKey)) || [];
        notes.push(note);
        localStorage.setItem(notesKey, JSON.stringify(notes));
        input.value = '';
        loadNotes();
    }
};

window.addEventListener('load', () => {
    loadNotes();

    // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è Service Worker
    if ('serviceWorker' in navigator) {
        navigator.serviceWorker.register('sw.js')
            .then(reg => console.log('SW –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω:', reg.scope))
            .catch(err => console.error('–û—à–∏–±–∫–∞ SW:', err));
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    updateStatus();
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –æ—Ç —Å–µ—Ç–∏
window.addEventListener('online', updateStatus);
window.addEventListener('offline', updateStatus);

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ PWA
window.addEventListener('beforeinstallprompt', (e) => {
    e.preventDefault();
    deferredPrompt = e;
    installBtn.style.display = 'block'; // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —É—Å—Ç–∞–Ω–æ–≤–∫–∏

    installBtn.addEventListener('click', () => {
        installBtn.style.display = 'none'; // –°–∫—Ä—ã—Ç—å –∫–Ω–æ–ø–∫—É –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è
        deferredPrompt.prompt(); // –ó–∞–ø—Ä–æ—Å–∏—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∫—É PWA
        deferredPrompt.userChoice.then(choice => {
            if (choice.outcome === 'accepted') {
                console.log('PWA —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞');
            } else {
                console.log('–£—Å—Ç–∞–Ω–æ–≤–∫—É –æ—Ç–º–µ–Ω–∏–ª–∏');
            }
            deferredPrompt = null;
        });
    });
});
